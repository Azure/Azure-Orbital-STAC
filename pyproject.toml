# --------------------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# --------------------------------------------------------------------------------------------
[project]
name = "azure-stac-cli"
version = "0.1.0"
description = "STAC Reference Architecture"
readme = "README.md"
requires-python = ">= 3.8"
classifiers = [
  "Framework :: FastAPI",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "License :: OSI Approved :: MIT License",
  "Topic :: Scientific/Engineering :: GIS",
]
dependencies = [
  "knack >= 0.10.0",
  "opencensus-ext-azure >= 1.1.9",
  "azure-servicebus == 7.11.0",
  "azure-storage-blob == 12.16.0",
  "pystac == 1.7.3",
  "python_dateutil == 2.8.2",
  "python_dotenv == 1.0.0",
  "rasterio == 1.3.7",
  "stactools == 0.4.8",
  "psycopg[binary] == 3.1.9",
  "pypgstac[psycopg] == 0.7.10",
  # This version should match the version of GDAL that is pre-installled
  # on the system (e.g., on Linux). See the base image version in Dockerfile
  # for the version of GDAL that is pre-installed when building for Docker.
  "gdal == 3.6.3",
]

[project.urls]
repository = "https://github.com/Azure/Azure-Orbital-STAC"

[project.optional-dependencies]
dev = [
  "black >= 23.1.0",
  "isort >= 5.12.0",
  "mypy >= 1.1.1",
  "flake8 >= 6.0.0",
  "flake8-pyproject >= 1.2.3",  # for flake8 to read pyproject.toml
  "types-python-dateutil"
]

[project.scripts]
stac = "azure_stac.cli.__main__:main"

[build-system]
requires = ["setuptools >= 40.9.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["src"]
include = ["azure_stac.*"]

[tool.flake8]
max-line-length = 96
per-file-ignores = [
  # Ignore unused imports in __init__.py files
  '__init__.py:F401'
]
exclude = ['.git', '__pycache__', '.mypy_cache', 'build', 'dist']

[tool.black]
line-length = 96
target-version = ['py37']
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
)
'''

[tool.mypy]
files = ["src"]
disallow_untyped_defs = true
ignore_missing_imports = true
follow_imports = "skip"
strict_optional = true

[tool.isort]
profile = "black"
skip = [
    '.eggs', '.git', '.hg', '.mypy_cache', '.nox', '.pants.d', '.tox',
    '.venv', '_build', 'buck-out', 'build', 'dist', 'node_modules', 'venv',
]
skip_gitignore = true
line_length = 96
