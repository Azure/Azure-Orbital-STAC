apiVersion: apps/v1
kind: Deployment
metadata:
  name: stac-event-consumer
spec:
  replicas: ${REPLICAS}
  selector:
    matchLabels:
      app: stac-event-consumer
  template:
    metadata:
      labels:
        app: stac-event-consumer
    spec:
      containers:
        - name: stac-event-consumer
          image: ${ACR_DNS}/${STAC_EVENT_CONSUMER_IMAGE_NAME}:latest
          imagePullPolicy: Always
          env:
            - name: PGSTAC_SERVICE_BUS_CONNECTION_STRING
              value: "${PGSTAC_SERVICE_BUS_CONNECTION_STRING}"
            - name: PGSTAC_SERVICE_BUS_TOPIC_NAME
              value: "${PGSTAC_SERVICE_BUS_TOPIC_NAME}"
            - name: PGSTAC_SERVICE_BUS_SUBSCRIPTION_NAME
              value: "${PGSTAC_SERVICE_BUS_SUBSCRIPTION_NAME}"
            - name: DATA_STORAGE_ACCOUNT_CONNECTION_STRING
              value: "${DATA_STORAGE_ACCOUNT_CONNECTION_STRING}"
            - name: GENERATED_STAC_STORAGE_CONTAINER_NAME
              value: "${GENERATED_STAC_STORAGE_CONTAINER_NAME}"
            - name: AZURE_LOG_CONNECTION_STRING
              value: "${AZURE_LOG_CONNECTION_STRING}"
            - name: DATA_STORAGE_PGSTAC_CONTAINER_NAME
              value: "${DATA_STORAGE_PGSTAC_CONTAINER_NAME}"
            - name: PGHOST
              value: "${PGHOST}"
            - name: PGPORT
              value: "${PGPORT}"
            - name: PGUSER
              value: "${PGUSER}"
            - name: PGDATABASE
              value: "${PGDATABASE}"
            - name: PGPASSWORD
              value: "${PGPASSWORD}"
          resources:
            limits:
              cpu: "${POD_CPU}"
              memory: "${POD_MEMORY}"
            requests:
              cpu: "${POD_CPU}"
              memory: "${POD_MEMORY}"
      restartPolicy: Always
      nodeSelector:
        kubernetes.io/os: linux
        env: ${ENV_LABEL}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: generate-stac-json
spec:
  replicas: ${REPLICAS}
  selector:
    matchLabels:
      app: generate-stac-json
  template:
    metadata:
      labels:
        app: generate-stac-json
    spec:
      containers:
        - name: generate-stac-json
          image: ${ACR_DNS}/${GENERATE_STAC_JSON_IMAGE_NAME}:latest
          imagePullPolicy: Always
          env:
            - name: DATA_STORAGE_ACCOUNT_CONNECTION_STRING
              value: "${DATA_STORAGE_ACCOUNT_CONNECTION_STRING}"
            - name: DATA_STORAGE_ACCOUNT_NAME
              value: "${DATA_STORAGE_ACCOUNT_NAME}"
            - name: DATA_STORAGE_ACCOUNT_KEY
              value: "${DATA_STORAGE_ACCOUNT_KEY}"
            - name: STACIFY_STORAGE_CONTAINER_NAME
              value: "${STACIFY_STORAGE_CONTAINER_NAME}"
            - name: STACIFY_SERVICE_BUS_CONNECTION_STRING
              value: "${STACIFY_SERVICE_BUS_CONNECTION_STRING}"
            - name: STACIFY_SERVICE_BUS_TOPIC_NAME
              value: "${STACIFY_SERVICE_BUS_TOPIC_NAME}"
            - name: STACIFY_SERVICE_BUS_SUBSCRIPTION_NAME
              value: "${STACIFY_SERVICE_BUS_SUBSCRIPTION_NAME}"
            - name: GENERATED_STAC_STORAGE_CONTAINER_NAME
              value: "${GENERATED_STAC_STORAGE_CONTAINER_NAME}"
            - name: AZURE_LOG_CONNECTION_STRING
              value: "${AZURE_LOG_CONNECTION_STRING}"
            - name: DATA_STORAGE_PGSTAC_CONTAINER_NAME
              value: "${DATA_STORAGE_PGSTAC_CONTAINER_NAME}"
            - name: STAC_METADATA_TYPE_NAME
              value: "${STAC_METADATA_TYPE_NAME}"
            - name: JPG_EXTENSION
              value: "${JPG_EXTENSION}"
            - name: XML_EXTENSION
              value: "${XML_EXTENSION}"
            - name: COLLECTION_ID
              value: "${COLLECTION_ID}"
          resources:
            limits:
              cpu: "${POD_CPU}"
              memory: "${POD_MEMORY}"
            requests:
              cpu: "${POD_CPU}"
              memory: "${POD_MEMORY}"
      restartPolicy: Always
      nodeSelector:
        kubernetes.io/os: linux
        env: ${ENV_LABEL}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: stac-collection
spec:
  replicas: ${REPLICAS}
  selector:
    matchLabels:
      app: stac-collection
  template:
    metadata:
      labels:
        app: stac-collection
    spec:
      containers:
        - name: stac-collection
          image: ${ACR_DNS}/${STAC_COLLECTION_IMAGE_NAME}:latest
          imagePullPolicy: Always
          env:
            - name: STACCOLLECTION_SERVICE_BUS_CONNECTION_STRING
              value: "${STACCOLLECTION_SERVICE_BUS_CONNECTION_STRING}"
            - name: STACCOLLECTION_SERVICE_BUS_TOPIC_NAME
              value: "${STACCOLLECTION_SERVICE_BUS_TOPIC_NAME}"
            - name: STACCOLLECTION_SERVICE_BUS_SUBSCRIPTION_NAME
              value: "${STACCOLLECTION_SERVICE_BUS_SUBSCRIPTION_NAME}"
            - name: DATA_STORAGE_ACCOUNT_CONNECTION_STRING
              value: "${DATA_STORAGE_ACCOUNT_CONNECTION_STRING}"
            - name: DATA_STORAGE_ACCOUNT_NAME
              value: "${DATA_STORAGE_ACCOUNT_NAME}"
            - name: DATA_STORAGE_ACCOUNT_KEY
              value: "${DATA_STORAGE_ACCOUNT_KEY}"
            - name: STACCOLLECTION_STORAGE_CONTAINER_NAME
              value: "${STACCOLLECTION_STORAGE_CONTAINER_NAME}"
            - name: AZURE_LOG_CONNECTION_STRING
              value: "${AZURE_LOG_CONNECTION_STRING}"
            - name: PGHOST
              value: "${PGHOST}"
            - name: PGPORT
              value: "${PGPORT}"
            - name: PGUSER
              value: "${PGUSER}"
            - name: PGDATABASE
              value: "${PGDATABASE}"
            - name: PGPASSWORD
              value: "${PGPASSWORD}"
          resources:
            limits:
              cpu: "${POD_CPU}"
              memory: "${POD_MEMORY}"
            requests:
              cpu: "${POD_CPU}"
              memory: "${POD_MEMORY}"
      restartPolicy: Always
      nodeSelector:
        kubernetes.io/os: linux
        env: ${ENV_LABEL}
