apiVersion: apps/v1
kind: Deployment
metadata:
  name: deployment-app-stacfastapi
  namespace: {{ .Values.deploymentNamespace }}
spec:
  replicas: {{ .Values.stacfastapi.replicas }}
  selector:
    matchLabels:
      app: app-stacfastapi
  template:
    metadata:
      labels:
        {{- toYaml .Values.stacfastapi.labels | nindent 8 }}
    spec:
      serviceAccountName: "stac-svc-acct"
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
        - args:
            - bash
            - -c
            - ./scripts/wait-for-it.sh {{ .Values.stacfastapi.env.PGHOST }}:{{ .Values.stacfastapi.env.POSTGRES_PORT }} && pypgstac pgready && pypgstac migrate && python -m stac_fastapi.pgstac.app
          image: "{{ .Values.repository }}/{{ .Values.stacfastapi.image.name }}:{{ .Values.stacfastapi.image.tag }}"
          imagePullPolicy: {{ .Values.stacfastapi.image.pullPolicy }}
          name: stacfastapi-pgstac
          env:
            - name: POSTGRES_PASS
              valueFrom:
                secretKeyRef:
                  name: pgadminloginpass
                  key: PGAdminLoginPass
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: pgadminloginpass
                  key: PGAdminLoginPass
            {{- range $envKey, $envValue := .Values.stacfastapi.env }}
            - name: "{{ $envKey }}"
              value: "{{ $envValue }}"
            {{- end }}
          ports:
            {{- toYaml .Values.stacfastapi.ports | nindent 10 }}
          resources:
            {{- toYaml .Values.stacfastapi.resources | nindent 10 }}
          volumeMounts:
            - name: secrets-store-inline
              mountPath: "/mnt/secrets-store"
              readOnly: true
      volumes:
        - name: secrets-store-inline
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: "azure-stac-keyvault-wi"
      restartPolicy: Always